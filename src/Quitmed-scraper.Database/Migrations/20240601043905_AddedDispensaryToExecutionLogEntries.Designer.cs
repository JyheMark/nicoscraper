// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Quitmed_scraper.Database;

#nullable disable

namespace Quitmed_scraper.Database.Migrations
{
    [DbContext(typeof(QuitmedScraperDatabaseContext))]
    [Migration("20240601043905_AddedDispensaryToExecutionLogEntries")]
    partial class AddedDispensaryToExecutionLogEntries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Quitmed_scraper.Database.Models.Dispensary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScrapeUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ScrapeUrl")
                        .IsUnique();

                    b.ToTable("Dispensaries");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.ExecutionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DispensaryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartTimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId");

                    b.ToTable("ExecutionLogs");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.HistoricalPricing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("HistoricalPricing");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DispensaryId")
                        .HasColumnType("uuid");

                    b.Property<bool>("InStock")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DispensaryId");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.ExecutionLog", b =>
                {
                    b.HasOne("Quitmed_scraper.Database.Models.Dispensary", "Dispensary")
                        .WithMany()
                        .HasForeignKey("DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.HistoricalPricing", b =>
                {
                    b.HasOne("Quitmed_scraper.Database.Models.Product", "Product")
                        .WithMany("PriceHistory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.Product", b =>
                {
                    b.HasOne("Quitmed_scraper.Database.Models.Dispensary", "Dispensary")
                        .WithMany("Products")
                        .HasForeignKey("DispensaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispensary");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.Dispensary", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Quitmed_scraper.Database.Models.Product", b =>
                {
                    b.Navigation("PriceHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
